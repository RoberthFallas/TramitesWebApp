{"version":3,"file":"apprun-html.esm.js","sources":["../src/app.ts","../src/createComponent.tsx","../src/vdom-my.ts","../src/web-component.ts","../src/decorator.ts","../src/directive.ts","../src/component.ts","../src/router.ts","../src/apprun.ts","../src/vdom.ts","../node_modules/morphdom/dist/morphdom-esm.js","../src/apprun-html.ts","../src/vdom-html.ts"],"sourcesContent":["import { EventOptions} from './types'\nexport class App {\n\n  private _events: Object;\n\n  public start;\n  public h;\n  public createElement;\n  public render;\n  public Fragment;\n  public webComponent;\n\n  constructor() {\n    this._events = {};\n  }\n\n  on(name: string, fn: (...args) => void, options: EventOptions = {}): void {\n    this._events[name] = this._events[name] || [];\n    this._events[name].push({ fn, options });\n  }\n\n  off(name: string, fn: (...args) => void): void {\n    const subscribers = this._events[name] || [];\n\n    this._events[name] = subscribers.filter((sub) => sub.fn !== fn);\n  }\n\n  find(name: string): any {\n    return this._events[name];\n  }\n\n  run(name: string, ...args): number {\n    const subscribers = this._events[name] || [];\n\n    console.assert(subscribers && subscribers.length > 0, 'No subscriber for event: ' + name);\n\n    // Update the list of subscribers by pulling out those which will run once.\n    // We must do this update prior to running any of the events in case they\n    // cause additional events to be turned off or on.\n    this._events[name] = subscribers.filter((sub) => {\n      return !sub.options.once;\n    });\n\n    subscribers.forEach((sub) => {\n      const { fn, options } = sub;\n      if (options.delay) {\n        this.delay(name, fn, args, options);\n      } else {\n        fn.apply(this, args);\n      }\n      return !sub.options.once;\n    });\n\n    return subscribers.length;\n  }\n\n  once(name: string, fn, options: EventOptions = {}): void {\n    this.on(name, fn, { ...options, once: true });\n  }\n\n  private delay(name, fn, args, options): void {\n    if (options._t) clearTimeout(options._t);\n    options._t = setTimeout(() => {\n      clearTimeout(options._t);\n      fn.apply(this, args);\n    }, options.delay);\n  }\n}\n\nconst AppRunVersions = 'AppRun-2';\nlet app: App;\nconst root = (typeof self === 'object' && self.self === self && self) ||\n  (typeof global === 'object' && global.global === global && global)\nif (root['app'] && root['_AppRunVersions']) {\n  app = root['app'];\n} else {\n  app = new App();\n  root['app'] = app;\n  root['_AppRunVersions'] = AppRunVersions;\n}\nexport default app;\n","import app from './app';\n\nfunction render(node, parent, idx) {\n  const { tag, props, children } = node;\n  let key = `_${idx}`;\n  let id = props && props['id'];\n  if (!id) id = `_${idx}${Date.now()}`;\n  else key = id;\n  if (!parent.__componentCache) parent.__componentCache = {};\n  let component = parent.__componentCache[key];\n  if (!component || !(component instanceof tag)) {\n    component = parent.__componentCache[key] = new tag({ ...props, children }).mount(id);\n  }\n  let state = component.state;\n  if (component.mounted) {\n    const new_state = component.mounted(props, children, state);\n    if (typeof new_state !== 'undefined') state = component.state = new_state;\n  }\n  if (state instanceof Promise) {\n    const render = el => {\n      component.element = el;\n      component.setState(state);\n    }\n    return <section {...props} ref={e => render(e)} _component={component}></section>;\n  }\n  else {\n    const vdom = component._view(state, props);\n    const render = el => {\n      component.element = el;\n      component.renderState(state, vdom);\n    }\n    return <section {...props} ref={e => render(e)} _component={component}>{vdom}</section>;\n  }\n}\n\nexport default function createComponent(node, parent, idx = 0) {\n  if (typeof node === 'string') return node;\n  if (Array.isArray(node)) return node.map(child => createComponent(child, parent, idx++));\n  let vdom = node;\n  if (node && typeof node.tag === 'function' && Object.getPrototypeOf(node.tag).__isAppRunComponent) {\n    vdom = render(node, parent, idx);\n  }\n  if (vdom && Array.isArray(vdom.children)) {\n    const new_parent = vdom.props?._component;\n    if (new_parent) {\n      let i = 0;\n      vdom.children = vdom.children.map(child => createComponent(child, new_parent, i++));\n    } else {\n      vdom.children = vdom.children.map(child => createComponent(child, parent, idx++));\n    }\n  }\n  return vdom;\n}\n","import createComponent from './createComponent';\nimport { VDOM, VNode } from './types';\nexport type Element = any; //HTMLElement | SVGSVGElement | SVGElement;\n\nconst ATTR_PROPS = '_props';\n\nfunction collect(children) {\n  const ch = [];\n  const push = (c) => {\n    if (c !== null && c !== undefined && c !== '' && c !== false) {\n      ch.push((typeof c === 'function' || typeof c === 'object') ? c : `${c}`);\n    }\n  }\n  children && children.forEach(c => {\n    if (Array.isArray(c)) {\n      c.forEach(i => push(i));\n    } else {\n      push(c);\n    }\n  });\n  return ch;\n}\n\nexport function createElement(tag: string | Function | [], props?: {}, ...children) {\n  const ch = collect(children);\n  if (typeof tag === 'string') return { tag, props, children: ch };\n  else if (Array.isArray(tag)) return tag; // JSX fragments - babel\n  else if (tag === undefined && children) return ch; // JSX fragments - typescript\n  else if (Object.getPrototypeOf(tag).__isAppRunComponent) return { tag, props, children: ch } // createComponent(tag, { ...props, children });\n  else if (typeof tag === 'function') return tag(props, ch);\n  else throw new Error(`Unknown tag in vdom ${tag}`);\n};\n\nconst keyCache = new WeakMap();\n\nexport const updateElement = render;\n\nexport function render(element: Element, nodes: VDOM, parent = {}) {\n  // console.log('render', element, node);\n  // tslint:disable-next-line\n  if (nodes == null || nodes === false) return;\n\n  nodes = createComponent(nodes, parent);\n\n  const isSvg = element?.nodeName === \"SVG\";\n\n  if (!element) return;\n  if (Array.isArray(nodes)) {\n    updateChildren(element, nodes, isSvg);\n  } else {\n    updateChildren(element, [nodes], isSvg);\n  }\n}\n\nfunction same(el: Element, node: VNode) {\n  // if (!el || !node) return false;\n  const key1 = el.nodeName;\n  const key2 = `${node.tag || ''}`;\n  return key1.toUpperCase() === key2.toUpperCase();\n}\n\nfunction update(element: Element, node: VNode, isSvg: boolean) {\n  if (node['_op'] === 3) return;\n  // console.assert(!!element);\n  isSvg = isSvg || node.tag === \"svg\";\n  if (!same(element, node)) {\n    element.parentNode.replaceChild(create(node, isSvg), element);\n    return;\n  }\n  !(node['_op'] & 2) && updateChildren(element, node.children, isSvg);\n  !(node['_op'] & 1) && updateProps(element, node.props, isSvg);\n}\n\nfunction updateChildren(element, children, isSvg: boolean) {\n  const old_len = element.childNodes?.length || 0;\n  const new_len = children?.length || 0;\n  const len = Math.min(old_len, new_len);\n  for (let i = 0; i < len; i++) {\n    const child = children[i];\n    if (child['_op'] === 3) continue;\n    const el = element.childNodes[i];\n    if (typeof child === 'string') {\n      if (el.textContent !== child) {\n        if (el.nodeType === 3) {\n          el.nodeValue = child\n        } else {\n          element.replaceChild(createText(child), el);\n        }\n      }\n    } else if (child instanceof HTMLElement || child instanceof SVGElement) {\n      element.insertBefore(child, el);\n    } else {\n      const key = child.props && child.props['key'];\n      if (key) {\n        if (el.key === key) {\n          update(element.childNodes[i], child, isSvg);\n        } else {\n          // console.log(el.key, key);\n          const old = keyCache[key];\n          if (old) {\n            const temp = old.nextSibling;\n            element.insertBefore(old, el);\n            temp ? element.insertBefore(el, temp) : element.appendChild(el);\n          }\n          update(element.childNodes[i], child, isSvg);\n        }\n      } else {\n        update(element.childNodes[i], child, isSvg);\n      }\n    }\n  }\n\n  let n = element.childNodes.length;\n  while (n > len) {\n    element.removeChild(element.lastChild);\n    n--;\n  }\n\n  if (new_len > len) {\n    const d = document.createDocumentFragment();\n    for (let i = len; i < children.length; i++) {\n      d.appendChild(create(children[i], isSvg));\n    }\n    element.appendChild(d);\n  }\n}\n\nfunction createText(node) {\n  if (node.indexOf('_html:') === 0) { // ?\n    const div = document.createElement('div');\n    div.insertAdjacentHTML('afterbegin', node.substring(6))\n    return div;\n  } else {\n    return document.createTextNode(node);\n  }\n}\n\nfunction create(node: VNode | string | HTMLElement | SVGElement, isSvg: boolean): Element {\n  // console.assert(node !== null && node !== undefined);\n  if ((node instanceof HTMLElement) || (node instanceof SVGElement)) return node;\n  if (typeof node === \"string\") return createText(node);\n  if (!node.tag || (typeof node.tag === 'function')) return createText(JSON.stringify(node));\n  isSvg = isSvg || node.tag === \"svg\";\n  const element = isSvg\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.tag)\n    : document.createElement(node.tag);\n\n  updateProps(element, node.props, isSvg);\n  if (node.children) node.children.forEach(child => element.appendChild(create(child, isSvg)));\n  return element\n}\n\nfunction mergeProps(oldProps: {}, newProps: {}): {} {\n  newProps['class'] = newProps['class'] || newProps['className'];\n  delete newProps['className'];\n  const props = {};\n  if (oldProps) Object.keys(oldProps).forEach(p => props[p] = null);\n  if (newProps) Object.keys(newProps).forEach(p => props[p] = newProps[p]);\n  return props;\n}\n\nfunction updateProps(element: Element, props: {}, isSvg) {\n  // console.assert(!!element);\n  const cached = element[ATTR_PROPS] || {};\n  props = mergeProps(cached, props || {});\n  element[ATTR_PROPS] = props;\n\n  for (const name in props) {\n    const value = props[name];\n    // if (cached[name] === value) continue;\n    // console.log('updateProps', name, value);\n    if (name.startsWith('data-')) {\n      const dname = name.substring(5);\n      const cname = dname.replace(/-(\\w)/g, (match) => match[1].toUpperCase());\n      if (element.dataset[cname] !== value) {\n        if (value || value === \"\") element.dataset[cname] = value;\n        else delete element.dataset[cname];\n      }\n    } else if (name === 'style') {\n      if (element.style.cssText) element.style.cssText = '';\n      if (typeof value === 'string') element.style.cssText = value;\n      else {\n        for (const s in value) {\n          if (element.style[s] !== value[s]) element.style[s] = value[s];\n        }\n      }\n    } else if (name.startsWith('xlink')) {\n      const xname = name.replace('xlink', '').toLowerCase();\n      if (value == null || value === false) {\n        element.removeAttributeNS('http://www.w3.org/1999/xlink', xname);\n      } else {\n        element.setAttributeNS('http://www.w3.org/1999/xlink', xname, value);\n      }\n    } else if (name.startsWith('on')) {\n      if (!value || typeof value === 'function') {\n        element[name] = value;\n      } else if (typeof value === 'string') {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (/^id$|^class$|^readonly$|^contenteditable$|^role|-/g.test(name) || isSvg) {\n      if (element.getAttribute(name) !== value) {\n        if (value) element.setAttribute(name, value);\n        else element.removeAttribute(name);\n      }\n    } else if (element[name] !== value) {\n      element[name] = value;\n    }\n    if (name === 'key' && value) keyCache[value] = element;\n  }\n  if (props && typeof props['ref'] === 'function') {\n    window.requestAnimationFrame(() => props['ref'](element));\n  }\n}\n\nexport function Fragment(props, ...children): any[] {\n  return collect(children);\n}","declare var customElements;\n\nexport type CustomElementOptions = {\n  render?: boolean;\n  shadow?: boolean;\n  history?: boolean;\n  global_event?: boolean;\n  observedAttributes?: string[];\n};\n\nexport const customElement = (componentClass, options: CustomElementOptions = {}) => class CustomElement extends HTMLElement {\n  private _shadowRoot;\n  private _component;\n  private _attrMap: (arg0: string) => string;\n  public on;\n  public run;\n  constructor() {\n    super();\n  }\n  get component() { return this._component; }\n  get state() { return this._component.state; }\n\n  static get observedAttributes() {\n    // attributes need to be set to lowercase in order to get observed\n    return (options.observedAttributes || []).map(attr => attr.toLowerCase());\n  }\n\n  connectedCallback() {\n    if (this.isConnected && !this._component) {\n      const opts = options || {};\n      this._shadowRoot = opts.shadow ? this.attachShadow({ mode: 'open' }) : this;\n      const observedAttributes = (opts.observedAttributes || [])\n\n      const attrMap = observedAttributes.reduce((map, name) => {\n        const lc = name.toLowerCase()\n        if (lc !== name) {\n          map[lc] = name\n        }\n        return map\n      }, {})\n      this._attrMap = (name: string) : string => attrMap[name] || name\n\n      const props = {};\n      Array.from(this.attributes).forEach(item => props[this._attrMap(item.name)] = item.value);\n\n      // add getters/ setters to allow observation on observedAttributes\n      observedAttributes.forEach(name => {\n        if (this[name] !== undefined) props[name] = this[name];\n        Object.defineProperty(this, name, {\n          get(): any {\n            return props[name];\n          },\n          set(this: CustomElement, value: unknown) {\n            // trigger change event\n            this.attributeChangedCallback(name, props[name], value)\n          },\n          configurable: true,\n          enumerable: true\n        });\n      })\n\n      const children = this.children ? Array.from(this.children) : [];\n      children.forEach(el => el.parentElement.removeChild(el));\n      this._component = new componentClass({ ...props, children }).mount(this._shadowRoot, opts);\n      // attach props to component\n      this._component._props = props;\n      // expose dispatchEvent\n      this._component.dispatchEvent = this.dispatchEvent.bind(this)\n      if (this._component.mounted) {\n        const new_state = this._component.mounted(props, children, this._component.state);\n        if (typeof new_state !== 'undefined') this._component.state = new_state;\n      }\n      this.on = this._component.on.bind(this._component);\n      this.run = this._component.run.bind(this._component);\n      if (!(opts.render===false)) this._component.run('.');\n    }\n  }\n\n  disconnectedCallback() {\n    this._component?.unload?.();\n    this._component?.unmount?.();\n    this._component = null;\n  }\n\n  attributeChangedCallback(name: string, oldValue: unknown, value: unknown) {\n    if (this._component) {\n      // camelCase attributes arrive only in lowercase\n      const mappedName = this._attrMap(name);\n      // store the new property/ attribute\n      this._component._props[mappedName] = value;\n      this._component.run('attributeChanged', mappedName, oldValue, value);\n\n      if (value !== oldValue && !(options.render === false)) {\n        window.requestAnimationFrame(() => {\n          // re-render state with new combined props on next animation frame\n          this._component.run('.')\n        })\n      }\n    }\n  }\n}\n\nexport default (name: string, componentClass, options?: CustomElementOptions) => {\n  (typeof customElements !== 'undefined') && customElements.define(name, customElement(componentClass, options))\n}\n","import webComponent, { CustomElementOptions } from './web-component';\n\n// tslint:disable:no-invalid-this\nexport const Reflect = {\n\n  meta: new WeakMap(),\n\n  defineMetadata(metadataKey, metadataValue, target) {\n    if (!this.meta.has(target)) this.meta.set(target, {});\n    this.meta.get(target)[metadataKey] = metadataValue;\n  },\n\n  getMetadataKeys(target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? Object.keys(this.meta.get(target)) : [];\n  },\n\n  getMetadata(metadataKey, target) {\n    target = Object.getPrototypeOf(target);\n    return this.meta.get(target) ? this.meta.get(target)[metadataKey] : null;\n  }\n}\n\nexport function update<E=string>(events?: E, options: any = {}) {\n  return (target: any, key: string, descriptor: any) => {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target);\n    return descriptor;\n  }\n}\n\nexport function on<E = string>(events?: E, options: any = {}) {\n  return function (target: any, key: string) {\n    const name = events ? events.toString() : key;\n    Reflect.defineMetadata(`apprun-update:${name}`,\n      { name, key, options }, target)\n  }\n}\n\nexport function customElement(name: string, options?: CustomElementOptions) {\n  return function _customElement<T extends { new(...args: any[]): {} }>(constructor: T) {\n    webComponent(name, constructor, options);\n    return constructor;\n  }\n}\n\n","import app from './app';\n\nconst getStateValue = (component, name) => {\n  return (name ? component['state'][name] : component['state']) || '';\n}\n\nconst setStateValue = (component, name, value) => {\n  if (name) {\n    const state = component['state'] || {};\n    state[name] = value;\n    component.setState(state);\n  } else {\n    component.setState(value);\n  }\n}\n\nexport default (key: string, props: [], tag, component) => {\n  if (key.startsWith('$on')) {\n    const event = props[key];\n    key = key.substring(1)\n    if (typeof event === 'boolean') {\n      props[key] = e => component.run(key, e);\n    } else if (typeof event === 'string') {\n      props[key] = e => component.run(event, e);\n    } else if (typeof event === 'function') {\n      props[key] = e => component.setState(event(component.state, e));\n    } else if (Array.isArray(event)) {\n      const [handler, ...p] = event;\n      if (typeof handler === 'string') {\n        props[key] = e => component.run(handler, ...p, e);\n      } else if (typeof handler === 'function') {\n        props[key] = e => component.setState(handler(component.state, ...p, e));\n      }\n    }\n\n  } else if (key === '$bind') {\n    const type = props['type'] || 'text';\n    const name = typeof props[key] === 'string' ? props[key] : props['name'];\n    if (tag === 'input') {\n      switch (type) {\n        case 'checkbox':\n          props['checked'] = getStateValue(component, name);\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.checked);\n          break;\n        case 'radio':\n          props['checked'] = getStateValue(component, name) === props['value'];\n          props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.value);\n          break;\n        case 'number':\n        case 'range':\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, Number(e.target.value));\n          break;\n        default:\n          props['value'] = getStateValue(component, name);\n          props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n      }\n    } else if (tag === 'select') {\n      props['value'] = getStateValue(component, name);\n      props['onchange'] = e => {\n        if (!e.target.multiple) { // multiple selection use $bind on option\n          setStateValue(component, name || e.target.name, e.target.value);\n        }\n      }\n    } else if (tag === 'option') {\n      props['selected'] = getStateValue(component, name);\n      props['onclick'] = e => setStateValue(component, name || e.target.name, e.target.selected);\n    } else if (tag === 'textarea') {\n      props['innerHTML'] = getStateValue(component, name);\n      props['oninput'] = e => setStateValue(component, name || e.target.name, e.target.value);\n    }\n  } else {\n    app.run('$', { key, tag, props, component });\n  }\n}","\r\nimport app, { App } from './app';\r\nimport { Reflect } from './decorator'\r\nimport { View, Update, ActionDef, ActionOptions, MountOptions } from './types';\r\nimport directive from './directive';\r\n\r\nconst componentCache = {};\r\napp.on('get-components', o => o.components = componentCache);\r\n\r\nconst REFRESH = state => state;\r\n\r\nexport class Component<T=any, E=any> {\r\n  static __isAppRunComponent = true;\r\n  private _app = new App();\r\n  private _actions = [];\r\n  private _global_events = [];\r\n  private _state;\r\n  private _history = [];\r\n  private _history_idx = -1;\r\n  private enable_history;\r\n  private global_event;\r\n  public element;\r\n  public rendered;\r\n  public mounted;\r\n  public unload;\r\n  private tracking_id;\r\n  private observer;\r\n  private save_vdom;\r\n\r\n  render(element: HTMLElement, node) {\r\n    app.render(element, node, this);\r\n  }\r\n\r\n  private _view(state, p = null) {\r\n    if (!this.view) return;\r\n    const h = app.createElement;\r\n    app.createElement = (tag, props, ...children) => {\r\n      props && Object.keys(props).forEach(key => {\r\n        if (key.startsWith('$')) {\r\n          directive(key, props, tag, this);\r\n          delete props[key];\r\n        }\r\n      });\r\n      return h(tag, props, ...children);\r\n    }\r\n    const html = p ? this.view(state, p) : this.view(state);\r\n    app.createElement = h;\r\n    return html;\r\n  }\r\n\r\n  private renderState(state: T, vdom = null) {\r\n    if (!this.view) return;\r\n    let html = vdom || this._view(state);\r\n    app['debug'] && app.run('debug', {\r\n      component: this,\r\n      state,\r\n      vdom: html || '[vdom is null - no render]',\r\n    });\r\n\r\n    if (typeof document !== 'object') return;\r\n\r\n    const el = (typeof this.element === 'string') ?\r\n      document.getElementById(this.element) : this.element;\r\n\r\n    if (el) {\r\n      const tracking_attr = '_c';\r\n      if (!this.unload) {\r\n        el.removeAttribute && el.removeAttribute(tracking_attr);\r\n      } else if (el['_component'] !== this || el.getAttribute(tracking_attr) !== this.tracking_id) {\r\n        this.tracking_id = new Date().valueOf().toString();\r\n        el.setAttribute(tracking_attr, this.tracking_id);\r\n        if (typeof MutationObserver !== 'undefined') {\r\n          if(!this.observer)  this.observer = new MutationObserver(changes => {\r\n            if (changes[0].oldValue === this.tracking_id || !document.body.contains(el)) {\r\n              this.unload(this.state);\r\n              this.observer.disconnect();\r\n              this.observer = null;\r\n              this.save_vdom = [];\r\n            }\r\n          });\r\n          this.observer.observe(document.body, {\r\n            childList: true, subtree: true,\r\n            attributes: true, attributeOldValue: true, attributeFilter: [tracking_attr]\r\n          });\r\n        }\r\n      }\r\n      el['_component'] = this;\r\n    }\r\n    if (!vdom) {\r\n      this.render(el, html);\r\n    }\r\n    this.rendered && this.rendered(this.state);\r\n  }\r\n\r\n  public setState(state: T, options: ActionOptions\r\n    = { render: true, history: false}) {\r\n    if (state instanceof Promise) {\r\n      // Promise will not be saved or rendered\r\n      // state will be saved and rendered when promise is resolved\r\n      state.then(s => {\r\n        this.setState(s, options)\r\n      }).catch(err => {\r\n        console.error(err);\r\n        throw err;\r\n      });\r\n      this._state = state;\r\n    } else {\r\n      this._state = state;\r\n      if (state == null) return;\r\n      this.state = state;\r\n      if (options.render !== false) this.renderState(state);\r\n      if (options.history !== false && this.enable_history) {\r\n        this._history = [...this._history, state];\r\n        this._history_idx = this._history.length - 1;\r\n      }\r\n      if (typeof options.callback === 'function') options.callback(this.state);\r\n    }\r\n  }\r\n\r\n  private _history_prev = () => {\r\n    this._history_idx--;\r\n    if (this._history_idx >= 0) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = 0;\r\n    }\r\n  };\r\n\r\n  private _history_next = () => {\r\n    this._history_idx++;\r\n    if (this._history_idx < this._history.length) {\r\n      this.setState(this._history[this._history_idx], { render: true, history: false });\r\n    }\r\n    else {\r\n      this._history_idx = this._history.length - 1;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    protected state?: T,\r\n    protected view?: View<T>,\r\n    protected update?: Update<T, E>,\r\n    protected options?) {\r\n  }\r\n\r\n  start = (element = null, options?: MountOptions): Component<T, E> => {\r\n    return this.mount(element, { ...options, render: true });\r\n  }\r\n\r\n  public mount(element = null, options?: MountOptions): Component<T, E>  {\r\n    console.assert(!this.element, 'Component already mounted.')\r\n    this.options = options = { ...this.options, ...options };\r\n    this.element = element;\r\n    this.global_event = options.global_event;\r\n    this.enable_history = !!options.history;\r\n\r\n    if (this.enable_history) {\r\n      this.on(options.history.prev || 'history-prev', this._history_prev);\r\n      this.on(options.history.next || 'history-next', this._history_next);\r\n    }\r\n\r\n    if (options.route) {\r\n      this.update = this.update || {};\r\n      this.update[options.route] = REFRESH;\r\n    }\r\n\r\n    this.add_actions();\r\n    this.state = this.state ?? this['model'] ?? {};\r\n    if (options.render) {\r\n      this.setState(this.state, { render: true, history: true });\r\n    } else {\r\n      this.setState(this.state, { render: false, history: true });\r\n    }\r\n    if (app['debug']) {\r\n      const id = typeof element === 'string' ? element : element.id;\r\n      componentCache[id] = componentCache[id] || [];\r\n      componentCache[id].push(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  is_global_event(name: string): boolean {\r\n    return name && (\r\n      this.global_event ||\r\n      this._global_events.indexOf(name) >= 0 ||\r\n      name.startsWith('#') || name.startsWith('/') || name.startsWith('@'));\r\n  }\r\n\r\n  add_action(name: string, action, options: ActionOptions = {}) {\r\n    if (!action || typeof action !== 'function') return;\r\n    if (options.global) this. _global_events.push(name);\r\n    this.on(name as any, (...p) => {\r\n      const newState = action(this.state, ...p);\r\n\r\n      app['debug'] && app.run('debug', {\r\n        component: this,\r\n        'event': name,\r\n        e: p,\r\n        state: this.state,\r\n        newState,\r\n        options\r\n      })\r\n\r\n      this.setState(newState, options)\r\n    }, options);\r\n  }\r\n\r\n  add_actions() {\r\n    const actions = this.update || {};\r\n    Reflect.getMetadataKeys(this).forEach(key => {\r\n      if (key.startsWith('apprun-update:')) {\r\n        const meta = Reflect.getMetadata(key, this)\r\n        actions[meta.name] = [this[meta.key].bind(this), meta.options];\r\n      }\r\n    })\r\n\r\n    const all = {};\r\n    if (Array.isArray(actions)) {\r\n      actions.forEach(act => {\r\n        const [name, action, opts] = act as ActionDef<T, E>;\r\n        const names = name.toString();\r\n        names.split(',').forEach(n => all[n.trim()] = [action, opts])\r\n      })\r\n    } else {\r\n      Object.keys(actions).forEach(name => {\r\n        const action = actions[name];\r\n        if (typeof action === 'function' || Array.isArray(action)) {\r\n          name.split(',').forEach(n => all[n.trim()] = action)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (!all['.']) all['.'] = REFRESH;\r\n    Object.keys(all).forEach(name => {\r\n      const action = all[name];\r\n      if (typeof action === 'function') {\r\n        this.add_action(name, action);\r\n      } else if (Array.isArray(action)) {\r\n        this.add_action(name, action[0], action[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public run(event: E, ...args) {\r\n    const name = event.toString();\r\n    return this.is_global_event(name) ?\r\n      app.run(name, ...args) :\r\n      this._app.run(name, ...args);\r\n  }\r\n\r\n  public on(event: E, fn: (...args) => void, options?: any) {\r\n    const name = event.toString();\r\n    this._actions.push({ name, fn });\r\n    return this.is_global_event(name) ?\r\n      app.on(name, fn, options) :\r\n      this._app.on(name, fn, options);\r\n  }\r\n\r\n  public unmount() {\r\n    this.observer?.disconnect();\r\n    this._actions.forEach(action => {\r\n      const { name, fn } = action;\r\n      this.is_global_event(name) ?\r\n        app.off(name, fn) :\r\n        this._app.off(name, fn);\r\n    });\r\n  }\r\n}\r\n","import app from './app';\n\nexport type Route = (url: string, ...args: any[]) => any;\n\nexport const ROUTER_EVENT: string = '//';\nexport const ROUTER_404_EVENT: string = '///';\n\nexport const route: Route = (url: string) => {\n  if (!url) url = '#';\n  if (url.startsWith('#')) {\n    const [name, ...rest] = url.split('/');\n    app.run(name, ...rest) || app.run(ROUTER_404_EVENT, name, ...rest);\n    app.run(ROUTER_EVENT, name, ...rest);\n  } else if (url.startsWith('/')) {\n    const [_, name, ...rest] = url.split('/');\n    app.run('/' + name, ...rest) || app.run(ROUTER_404_EVENT, '/' + name, ...rest);\n    app.run(ROUTER_EVENT, '/' + name, ...rest);\n  } else {\n    app.run(url) || app.run(ROUTER_404_EVENT, url);\n    app.run(ROUTER_EVENT, url);\n  }\n}\nexport default route;","import app from './app';\nimport { createElement, render, Fragment } from './vdom';\nimport { Component } from './component';\nimport { VNode, View, Action, Update, EventOptions, ActionOptions, MountOptions, AppStartOptions } from './types';\nimport { on, update, customElement } from './decorator';\nimport webComponent, { CustomElementOptions } from './web-component';\nimport { Route, route, ROUTER_EVENT, ROUTER_404_EVENT } from './router';\n\nexport interface IApp {\n  start<T, E=any>(element?: Element | string, model?: T, view?: View<T>, update?: Update<T, E>,\n    options?: AppStartOptions<T>): Component<T, E>;\n  on(name: string, fn: (...args: any[]) => void, options?: any): void;\n  off(name: string, fn: (...args: any[]) => void): void;\n  run(name: string, ...args: any[]): number;\n  h(tag: string | Function, props, ...children): VNode | VNode[];\n  createElement(tag: string | Function, props, ...children): VNode | VNode[];\n  render(element: HTMLElement, node: VNode): void;\n  Fragment(props, ...children): any[];\n  route?: Route;\n  webComponent(name: string, componentClass, options?: CustomElementOptions): void;\n}\n\napp.h = app.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\napp.webComponent = webComponent;\n\napp.start = <T, E = any>(element?: Element, model?: T, view?: View<T>, update?: Update<T, E>,\n  options?: AppStartOptions<T>) : Component<T, E> => {\n    const opts = {...options, render: true, global_event: true };\n    const component = new Component<T, E>(model, view, update);\n    if (options && options.rendered) component.rendered = options.rendered;\n    component.mount(element, opts);\n    return component;\n};\n\nconst NOOP = _ => {/* Intentionally empty */ }\napp.on('$', NOOP);\napp.on('debug', _ => NOOP);\napp.on(ROUTER_EVENT, NOOP);\napp.on('#', NOOP);\napp['route'] = route;\napp.on('route', url => app['route'] && app['route'](url));\n\nif (typeof document === 'object') {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    if (app['route'] === route) {\n      window.onpopstate = () => route(location.hash);\n      route(location.hash);\n    }\n  });\n}\n\nexport type StatelessComponent<T={}> = (args: T) => string | VNode | void;\nexport { app, Component, View, Action, Update, on, update, EventOptions, ActionOptions, MountOptions, Fragment }\nexport { update as event };\nexport { ROUTER_EVENT, ROUTER_404_EVENT };\nexport { customElement, CustomElementOptions, AppStartOptions };\nexport default app as IApp;\n\nif (typeof window === 'object') {\n  window['Component'] = Component;\n  window['React'] = app;\n  window['on'] = on;\n  window['customElement'] = customElement;\n}\n\n\n","import { createElement, updateElement, Fragment } from './vdom-my';\nexport function render(element, html, parent?) {\n  updateElement(element, html, parent);\n}\nexport { createElement, Fragment };\n\n\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import app from './apprun'\nexport {\n  app, Component, View, Action, Update, on, update, event, EventOptions,\n  customElement, CustomElementOptions,\n  ROUTER_404_EVENT, ROUTER_EVENT\n} from './apprun'\nimport { createElement, render, Fragment } from './vdom-html';\n\napp.createElement = createElement;\napp.render = render;\napp.Fragment = Fragment;\n\nexport default app;\n","import { createElement, updateElement, Fragment } from './vdom-my';\nimport morphdom from 'morphdom';\n\nexport function render(element, html, parent?) {\n  if (typeof html === 'string') {\n    html = html.trim();\n    if (element.firstChild) {\n      const el = element.cloneNode(false);\n      el.innerHTML = html;\n      morphdom(element, el);\n    } else {\n      element.innerHTML = html;\n    }\n  } else {\n    updateElement(element, html, parent);\n  }\n}\nexport { createElement, Fragment };\n\n"],"names":["App","[object Object]","this","_events","name","fn","options","push","subscribers","filter","sub","args","console","assert","length","once","forEach","delay","apply","on","_t","clearTimeout","setTimeout","app","root","self","global","createComponent","node","parent","idx","Array","isArray","map","child","vdom","tag","Object","getPrototypeOf","__isAppRunComponent","props","children","key","id","Date","now","__componentCache","component","mount","state","mounted","new_state","Promise","render","el","element","setState","ref","e","_component","_view","renderState","new_parent","i","collect","ch","c","createElement","undefined","Error","keyCache","WeakMap","updateElement","nodes","isSvg","nodeName","updateChildren","update","key1","key2","toUpperCase","same","parentNode","replaceChild","create","updateProps","old_len","childNodes","new_len","len","Math","min","textContent","nodeType","nodeValue","createText","HTMLElement","SVGElement","insertBefore","old","temp","nextSibling","appendChild","n","removeChild","lastChild","d","document","createDocumentFragment","indexOf","div","insertAdjacentHTML","substring","createTextNode","JSON","stringify","createElementNS","cached","oldProps","newProps","keys","p","mergeProps","value","startsWith","cname","replace","match","dataset","style","cssText","s","xname","toLowerCase","removeAttributeNS","setAttributeNS","setAttribute","removeAttribute","test","getAttribute","window","requestAnimationFrame","Fragment","customElement","componentClass","super","observedAttributes","attr","isConnected","opts","_shadowRoot","shadow","attachShadow","mode","attrMap","reduce","lc","_attrMap","from","attributes","item","defineProperty","get","attributeChangedCallback","configurable","enumerable","parentElement","_props","dispatchEvent","bind","run","unload","unmount","oldValue","mappedName","customElements","define","Reflect","meta","metadataKey","metadataValue","target","has","set","events","descriptor","toString","defineMetadata","constructor","webComponent","getStateValue","setStateValue","componentCache","o","components","REFRESH","Component","view","_history_idx","_history","history","h","event","handler","type","checked","Number","multiple","selected","directive","html","getElementById","tracking_attr","tracking_id","valueOf","MutationObserver","observer","changes","body","contains","disconnect","save_vdom","observe","childList","subtree","attributeOldValue","attributeFilter","rendered","then","catch","err","error","_state","enable_history","callback","global_event","prev","_history_prev","next","_history_next","route","add_actions","_global_events","action","newState","actions","getMetadataKeys","getMetadata","all","act","split","trim","add_action","is_global_event","_app","_actions","off","ROUTER_EVENT","ROUTER_404_EVENT","url","rest","_","start","model","NOOP","addEventListener","onpopstate","location","hash","range","doc","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","toElement","str","template","innerHTML","content","createFragmentFromTemplate","selectNode","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","compareNodeNames","fromEl","toEl","fromCodeStart","toCodeStart","fromNodeName","toNodeName","charCodeAt","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","selectedIndex","INPUT","TEXTAREA","newValue","firstChild","placeholder","SELECT","optgroup","curChild","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","keyedRemovalList","addKeyedRemoval","removeNode","skipKeyedNodes","walkDiscardedChildNodes","handleNodeAdded","unmatchedFromEl","morphEl","toElKey","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","elToRemove","morphdomFactory","attrName","attrNamespaceURI","attrValue","toNodeAttrs","localName","getAttributeNS","prefix","fromNodeAttrs","hasAttributeNS","cloneNode"],"mappings":"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"}